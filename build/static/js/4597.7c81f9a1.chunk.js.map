{"version":3,"file":"static/js/4597.7c81f9a1.chunk.js","mappings":"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","sources":["board/components/skins/default/Form.js","commons/components/Buttons.js","commons/components/FileItems.js","commons/components/FileUpload.js","commons/components/InputBox.js","commons/components/MessageBox.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from 'react';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport {\r\n  ClassicEditor,\r\n  Image,\r\n  ImageInsert,\r\n  Bold,\r\n  Essentials,\r\n  Italic,\r\n  Paragraph,\r\n} from 'ckeditor5';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport MessageBox from '../../../../commons/components/MessageBox';\r\nimport InputBox from '../../../../commons/components/InputBox';\r\nimport UserInfoContext from '../../../../member/modules/UserInfoContext';\r\nimport { FaCheckSquare, FaSquare } from 'react-icons/fa';\r\nimport FileUpload from '../../../../commons/components/FileUpload';\r\nimport FileItems from '../../../../commons/components/FileItems';\r\n\r\nimport 'ckeditor5/ckeditor5.css';\r\nimport { MidButton } from '../../../../commons/components/Buttons';\r\n\r\nconst Wrapper = styled.form`\r\n  .ck-editor__editable {\r\n    height: 450px;\r\n  }\r\n  textarea {\r\n    width: 100%;\r\n    height: 350px;\r\n    border: 1px solid #d5d5d5;\r\n    resize: none;\r\n    padding: 15px;\r\n  }\r\n`;\r\n\r\nconst Form = ({\r\n  board,\r\n  form,\r\n  onSubmit,\r\n  onToggleNotice,\r\n  errors,\r\n  fileUploadCallback,\r\n  fileDeleteCallback,\r\n  onChange,\r\n  items,\r\n}) => {\r\n  const [mounted, setMounted] = useState(false);\r\n  const [editor, setEditor] = useState(null);\r\n  const { useEditor, useUploadImage, useUploadFile } = board;\r\n  //const [ rName ] = items;\r\n  const { t } = useTranslation();\r\n  const {\r\n    states: { isAdmin },\r\n  } = useContext(UserInfoContext);\r\n\r\n  useEffect(() => {\r\n    setMounted(true);\r\n\r\n    return () => {\r\n      setMounted(false);\r\n    };\r\n  }, []);\r\n\r\n  // 이미지 에디터 첨부\r\n  const insertImageCallback = useCallback(\r\n    (url) => {\r\n      editor.execute('insertImage', { source: url });\r\n    },\r\n    [editor],\r\n  );\r\n\r\n  return (\r\n    <Wrapper onSubmit={onSubmit} autoComplete=\"off\">\r\n      <div className=\"board\">\r\n        {isAdmin && (\r\n          <dl>\r\n            <dt>{t('공지글')}</dt>\r\n            <dd>\r\n              <label onClick={onToggleNotice}>\r\n                {form?.notice ? <FaCheckSquare /> : <FaSquare />}\r\n                {t('공지글로_등록하기')}\r\n              </label>\r\n            </dd>\r\n          </dl>\r\n        )}\r\n        <dl>\r\n          <dt>{t('제목')}</dt>\r\n          <dd>\r\n            <InputBox\r\n              type=\"text\"\r\n              name=\"subject\"\r\n              value={form?.subject}\r\n              onChange={onChange}\r\n            />\r\n            {errors?.subject && (\r\n              <MessageBox color=\"danger\" messages={errors.subject} />\r\n            )}\r\n          </dd>\r\n        </dl>\r\n\r\n        <dl>\r\n          <dt>{t('작성자')}</dt>\r\n          <dd>\r\n            <InputBox\r\n              type=\"text\"\r\n              name=\"poster\"\r\n              value={form?.poster}\r\n              onChange={onChange}\r\n            />\r\n            {errors?.poster && (\r\n              <MessageBox color=\"danger\" messages={errors.poster} />\r\n            )}\r\n          </dd>\r\n        </dl>\r\n        <dl>\r\n          <dt>{t('내용')}</dt>\r\n          <dd>\r\n            {useEditor ? (\r\n              mounted && (\r\n                <>\r\n                  <CKEditor\r\n                    editor={ClassicEditor}\r\n                    config={{\r\n                      plugins: [\r\n                        Bold,\r\n                        Essentials,\r\n                        Italic,\r\n                        Paragraph,\r\n                        Image,\r\n                        ImageInsert,\r\n                      ],\r\n                      toolbar: ['undo', 'redo', 'bold', 'italic'],\r\n                    }}\r\n                    data={form?.content}\r\n                    onReady={(editor) => setEditor(editor)}\r\n                    onChange={(_, editor) => {\r\n                      onChange({\r\n                        target: { name: 'content', value: editor.getData() },\r\n                      });\r\n                    }}\r\n                  />\r\n                  {editor && useUploadImage && (\r\n                    <>\r\n                      <FileUpload\r\n                        gid={form.gid}\r\n                        location=\"editor\"\r\n                        imageOnly\r\n                        color=\"primary\"\r\n                        width=\"120\"\r\n                        callback={(files) => fileUploadCallback(files, editor)}\r\n                      >\r\n                        {t('이미지_업로드')}\r\n                      </FileUpload>\r\n                      <FileItems\r\n                        files={form?.editorImages}\r\n                        mode=\"editor\"\r\n                        insertImageCallback={insertImageCallback}\r\n                        fileDeleteCallback={fileDeleteCallback}\r\n                      />\r\n                    </>\r\n                  )}\r\n                </>\r\n              )\r\n            ) : (\r\n              <textarea\r\n                name=\"content\"\r\n                value={form?.content}\r\n                onChange={onChange}\r\n              ></textarea>\r\n            )}\r\n            {errors?.content && (\r\n              <MessageBox color=\"danger\" messages={errors.content} />\r\n            )}\r\n          </dd>\r\n        </dl>\r\n        {useUploadFile && (\r\n          <dl>\r\n            <dt>{t('파일첨부')}</dt>\r\n            <dd>\r\n              <FileUpload\r\n                gid={form.gid}\r\n                location=\"attach\"\r\n                width=\"120\"\r\n                color=\"primary\"\r\n                callback={fileUploadCallback}\r\n              >\r\n                {t('파일선택')}\r\n              </FileUpload>\r\n              <FileItems\r\n                files={form?.attachFiles}\r\n                mode=\"attach\"\r\n                fileDeleteCallback={fileDeleteCallback}\r\n              />\r\n            </dd>\r\n          </dl>\r\n        )}\r\n\r\n        <MidButton type=\"submit\">\r\n          {t(form.mode === 'update' ? '수정하기' : '작성하기')}\r\n        </MidButton>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(Form);\r\n","import styled, { css } from 'styled-components';\r\nimport { buttonColor ,color} from '../../styles/color';\r\nimport fontSize from '../../styles/fontSize';\r\nconst { big, medium, normal } = fontSize;\r\nconst { jmt } = color;\r\n\r\n\r\nconst commonStyle = css`\r\n  width: 100%;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n`;\r\n\r\n\r\nexport const SmallButton = styled.button`\r\n  font-size: ${normal};\r\n  height: 30px;\r\n  ${commonStyle}\r\n\r\n  ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n  ${({ width }) => css`\r\n    width: ${width}px;\r\n  `}\r\n`;\r\n\r\nexport const MidButton = styled.button`\r\n  font-size: ${medium};\r\n  height: 40px;\r\n  ${commonStyle}\r\n\r\n  ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n`;\r\n\r\nexport const BigButton = styled.button`\r\n  font-size: ${big};\r\n  height: 45px;\r\n  ${commonStyle}\r\n\r\n  ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n`;\r\n\r\nexport const SearchButton = styled.button`\r\n  font-size: ${medium};\r\n  height: 40px;\r\n  ${commonStyle}\r\n\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n\r\n    ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n  ${({ width }) => css`\r\n    width: ${width}px;\r\n  `}\r\n`\r\n\r\nexport const ButtonGroup = styled.div`\r\n  display: flex;\r\n  width: ${({ width }) => (width ? `${width}px` : '100%')};\r\n  margin: 20px auto;\r\n\r\n  button {\r\n    width: 0;\r\n    flex-grow: 1;\r\n  }\r\n\r\n  button + button {\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nexport const jmtButton = styled.button`\r\n\r\n`\r\n\r\nexport const BackButton = styled.button`\r\n  font-size: ${medium};\r\n  width: 120px;\r\n  height: 40px;\r\n  background-color:${jmt}; \r\n  color: white;\r\n  border-color: white;\r\n  margin: 0 auto;\r\n  border-radius: 3px;\r\n  display: block;\r\n\r\n`;","import React from 'react';\r\n\r\nimport { FaWindowClose, FaFileUpload } from 'react-icons/fa';\r\n\r\nconst FileItems = ({\r\n  files,\r\n  mode,\r\n  insertImageCallback,\r\n  fileDeleteCallback,\r\n}) => {\r\n  return (\r\n    files &&\r\n    files.length > 0 && (\r\n      <ul>\r\n        {files.map(({ seq, fileName, fileDownloadUrl, fileUrl }) => (\r\n          <li key={seq}>\r\n            <a href={fileDownloadUrl}>{fileName}</a>\r\n            {mode === 'editor' && (\r\n              <FaFileUpload onClick={() => insertImageCallback(fileUrl)} />\r\n            )}\r\n            <FaWindowClose onClick={() => fileDeleteCallback(seq)} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  );\r\n};\r\n\r\nexport default React.memo(FileItems);","import React, { useCallback, useState } from 'react';\r\nimport apiRequest from '../libs/apiRequest';\r\nimport { SmallButton } from './Buttons';\r\nimport MessageBox from './MessageBox';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst FileUpload = ({\r\n  children,\r\n  gid,\r\n  location,\r\n  color,\r\n  imageOnly,\r\n  single,\r\n  done,\r\n  callback,\r\n  width,\r\n  imageUrl,\r\n}) => {\r\n  const [message, setMessage] = useState('');\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // 버튼 클릭 처리\r\n  const onButtonClick = useCallback(() => {\r\n    const fileEl = document.createElement('input');\r\n    fileEl.type = 'file';\r\n    fileEl.multiple = !Boolean(single);\r\n    fileEl.click();\r\n\r\n    const fileListener = (e) => {\r\n      const files = e.target.files;\r\n      try {\r\n        if (files.length === 0) {\r\n          throw new Error(t('파일을_선택하세요.'));\r\n        }\r\n\r\n        if (imageOnly) {\r\n          for (const file of files) {\r\n            if (!file.type.includes('image/')) {\r\n              throw new Error(t('이미지_형식의_파일만_업로드하세요.'));\r\n            }\r\n          }\r\n        }\r\n\r\n        if (!gid?.trim()) {\r\n          throw new Error(t('필수항목(gid)_누락'));\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('gid', gid.trim());\r\n        if (location) formData.append('location', location);\r\n\r\n        for (const file of files) {\r\n          formData.append('file', file);\r\n        }\r\n\r\n        if (single) {\r\n          formData.append('single', Boolean(single));\r\n        }\r\n\r\n        if (imageOnly) {\r\n          formData.append('imageOnly', Boolean(imageOnly));\r\n        }\r\n\r\n        if (done) {\r\n          formData.append('done', Boolean(done));\r\n        }\r\n\r\n        (async () => {\r\n          try {\r\n            const res = await apiRequest('/file/upload', 'POST', formData);\r\n            if (res.status === 201 && res.data.success) {\r\n              // 파일 업로드 후속 처리\r\n              if (typeof callback === 'function') {\r\n                callback(res.data.data);\r\n              }\r\n              // 성공시 처리\r\n              return;\r\n            }\r\n\r\n            if (res.data.message) setMessage(res.data.message);\r\n          } catch (err) {\r\n            setMessage(err.message);\r\n            console.error(err);\r\n          }\r\n        })();\r\n      } catch (err) {\r\n        setMessage(err.message);\r\n      }\r\n    };\r\n\r\n    fileEl.removeEventListener('change', fileListener);\r\n\r\n    fileEl.addEventListener('change', fileListener);\r\n  }, [single, gid, location, imageOnly, t, callback, done]);\r\n\r\n  return (\r\n    <>\r\n      {imageUrl ? (\r\n        <img\r\n          src={imageUrl}\r\n          width={width}\r\n          alt=\"profile\"\r\n          onClick={onButtonClick}\r\n        />\r\n      ) : (\r\n        <SmallButton\r\n          width={width}\r\n          type=\"button\"\r\n          color={color}\r\n          onClick={onButtonClick}\r\n        >\r\n          {children}\r\n        </SmallButton>\r\n      )}\r\n      {message && <MessageBox color=\"danger\">{message}</MessageBox>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(FileUpload);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst InputBox = styled.input`\r\n  border: 1px solid #d5d5d5;\r\n  height: 40px;\r\n  width: 100%;\r\n  padding: 0 10px;\r\n  border-radius: 3px;\r\n`;\r\n\r\nexport default React.memo(InputBox);\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { color } from '../../styles/color';\r\nimport fontSize from '../../styles/fontSize';\r\nconst { small } = fontSize;\r\n\r\nconst Box = styled.div`\r\n  text-align: center;\r\n  padding: 7px 10px;\r\n  font-size: ${small};\r\n  border-radius: 3px;\r\n  color: ${color.dark};\r\n\r\n  & + & {\r\n    margin-top: 5px;\r\n  }\r\n\r\n  ${({ color: c }) =>\r\n    c &&\r\n    css`\r\n      color: ${color[c]};\r\n      box-shadow: 2px 2px 5px ${color[c]};\r\n    `}\r\n`;\r\n\r\nconst MessageBox = ({ messages, color, children }) => {\r\n  messages = messages || [];\r\n\r\n  if (children) messages.push(children);\r\n\r\n  return (\r\n    <>\r\n      {messages.map((message, i) => (\r\n        <Box key={i} color={color}>\r\n          {message}\r\n        </Box>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(MessageBox);\r\n"],"names":["Wrapper","styled","form","_templateObject","_taggedTemplateLiteral","Form","_ref","board","onSubmit","onToggleNotice","errors","fileUploadCallback","fileDeleteCallback","onChange","items","mounted","setMounted","useState","editor","setEditor","useEditor","useUploadImage","useUploadFile","t","useTranslation","states","isAdmin","useContext","UserInfoContext","useEffect","insertImageCallback","useCallback","url","execute","source","_jsx","autoComplete","children","_jsxs","className","onClick","notice","FaCheckSquare","FaSquare","InputBox","type","name","value","subject","MessageBox","color","messages","poster","_Fragment","CKEditor","ClassicEditor","config","plugins","Bold","Essentials","Italic","Paragraph","Image","ImageInsert","toolbar","data","content","onReady","_","target","getData","FileUpload","gid","location","imageOnly","width","callback","files","FileItems","editorImages","mode","attachFiles","MidButton","React","big","medium","normal","fontSize","jmt","commonStyle","css","SmallButton","button","_templateObject2","buttonColor","_templateObject3","_ref2","_templateObject4","_templateObject5","_ref3","_templateObject6","BigButton","_templateObject7","_ref4","_templateObject8","SearchButton","_templateObject9","_ref5","_templateObject10","_ref6","_templateObject11","ButtonGroup","div","_templateObject12","_ref7","concat","BackButton","_templateObject13","_templateObject14","length","map","seq","fileName","fileDownloadUrl","fileUrl","href","FaFileUpload","FaWindowClose","single","done","imageUrl","message","setMessage","onButtonClick","fileEl","document","createElement","multiple","Boolean","click","fileListener","e","Error","file","includes","trim","formData","FormData","append","res","apiRequest","status","success","err","console","error","removeEventListener","addEventListener","src","alt","input","small","Box","dark","c","push","i"],"sourceRoot":""}