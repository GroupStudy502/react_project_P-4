{"version":3,"file":"static/js/7140.c07b8206.chunk.js","mappings":"2LAGO,MAAMA,EAAQA,CAACC,EAAKC,IACzBC,EAAY,gBAADC,OAAiBH,GAAO,OAAQC,GAEhCG,EAASA,CAACC,EAAKJ,IAC1BC,EAAY,iBAADC,OAAkBE,GAAO,QAASJ,GAE/C,SAASC,EAAYI,EAAKC,EAAQN,GAChC,OAAO,IAAIO,SAAQ,CAACC,EAASC,KAC3B,WACE,IACE,MAAMC,QAAYC,EAAAA,EAAAA,GAAWN,EAAKC,EAAQN,GAC1C,GAAmB,MAAfU,EAAIE,OAEN,YADAJ,EAAQE,EAAIG,KAAKA,MAInBJ,EAAOC,EAAIG,KACb,CAAE,MAAOC,GACPC,QAAQC,MAAMF,GACdL,EAAOK,EACT,CACD,EAbD,EAaI,GAER,CAGO,MAAMG,EAAWb,IAAQc,EAAAA,EAAAA,GAAY,eAADhB,OAAgBE,IAG9Ce,EAAUA,CAACpB,EAAKqB,KAAY,IAADC,EACtCD,EAAe,QAATC,EAAGD,SAAM,IAAAC,EAAAA,EAAI,CAAC,EACpB,IAAIC,EAAKC,OAAOC,QAAQJ,GACrBK,KAAIC,IAAA,IAAEC,EAAGC,GAAEF,EAAA,SAAAxB,OAAQyB,EAAC,KAAAzB,OAAI0B,EAAC,IACzBC,KAAK,KAERP,EAAKA,EAAE,IAAApB,OAAOoB,GAAOA,EAErB,MAAMjB,EAAG,eAAAH,OAAkBH,GAAGG,OAAGoB,GAEjC,OAAOJ,EAAAA,EAAAA,GAAYb,EAAI,EAGZyB,EAAc1B,IACzBc,EAAAA,EAAAA,GAAY,iBAADhB,OAAkBE,GAAO,S,gDC5CvB,SAAS2B,EAAUhC,GAChC,OAAOmB,EAAAA,EAAAA,GAAY,iBAADhB,OAAkBH,GACtC,C,yDCFA,MAAMiC,EAAYA,KACTC,EAAAA,EAAAA,KAAA,MAAAC,SAAI,uBAGb,EAAeC,EAAAA,KAAWH,GCJpBI,EAAiBA,KACdH,EAAAA,EAAAA,KAAA,MAAAC,SAAI,6BAGb,EAAeC,EAAAA,KAAWC,GCFpBC,EAAOX,IAAiC,IAAhC,MAAEY,EAAK,OAAElB,EAAM,SAAEmB,GAASb,EACtC,OACEc,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAP,SAAA,EACED,EAAAA,EAAAA,KAACD,EAAS,CAACM,MAAOA,KAClBL,EAAAA,EAAAA,KAACG,EAAc,CAAChB,OAAQA,EAAQsB,SAAUH,MACzC,EAIP,EAAeJ,EAAAA,KAAWE,E,oKCP1B,MAAMM,EAAUC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QAqCnBC,GAAiBJ,EAAAA,EAAAA,KAnCNlB,IAA0B,IAAzB,KAAEuB,EAAI,UAAEC,GAAWxB,EACnC,MAAM,IACJtB,EAAG,OACH+C,EAAM,QACNC,EAAO,OACPC,EAAM,OACNC,EAAM,UACNC,EAAS,aACTC,EAAY,UACZC,GACER,EAEJ,OACET,EAAAA,EAAAA,MAAA,MAAIU,UAAWA,EAAUhB,SAAA,EACvBM,EAAAA,EAAAA,MAACkB,EAAAA,GAAI,CAACC,GAAI,eAAiBvD,EAAK8C,UAAU,UAAShB,SAAA,CAChDiB,GAAM,IAAAjD,QAAQ0D,EAAAA,EAAAA,GAAE,gBAAK,KACrBR,EACAI,EAAe,GAAC,IAAAtD,OAAQsD,EAAaK,iBAAgB,SAExDrB,EAAAA,EAAAA,MAAA,OAAKU,UAAU,YAAWhB,SAAA,EACxBM,EAAAA,EAAAA,MAAA,QAAMU,UAAU,SAAQhB,SAAA,CACrBmB,EACW,OAAXC,GAAe,IAAApD,OAAQoD,EAAOQ,MAAK,QAErCP,EAAY,IACXf,EAAAA,EAAAA,MAAA,QAAMU,UAAU,aAAYhB,SAAA,EACzB0B,EAAAA,EAAAA,GAAE,sBAAO,KAAGL,EAAUM,qBAG3B5B,EAAAA,EAAAA,KAAA,QAAMiB,UAAU,WAAUhB,SAAEuB,SAE3B,GAIcb,CAAgBmB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,gRAmBjCiB,EAASpB,EAAAA,GAAOqB,GAAEC,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,QAElBf,EAAYmC,IAAgB,IAAf,MAAE7B,GAAO6B,EAC1B,MAAM,EAAEP,IAAMQ,EAAAA,EAAAA,MAEd,OACEnC,EAAAA,EAAAA,KAACU,EAAO,CAAAT,SACLI,GAASA,EAAM+B,OAAS,EACvB/B,EAAMb,KAAKwB,IAAShB,EAAAA,EAAAA,KAACe,EAAc,CAAgBC,KAAMA,GAAhBA,EAAK7C,QAE9C6B,EAAAA,EAAAA,KAAC+B,EAAM,CAAA9B,SAAE0B,EAAE,4EAEL,EAId,EAAezB,EAAAA,KAAWH,G,MC1E1B,MAAMsC,EAAU1B,EAAAA,GAAO5C,KAAI8C,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QAErBX,EAAiBV,IAA2B,IAA1B,OAAEN,EAAM,SAAEmB,GAAUb,EAC1C,MAAM,EAAEkC,IAAMQ,EAAAA,EAAAA,MACd,OACE5B,EAAAA,EAAAA,MAAC8B,EAAO,CAAC5B,SAAW6B,GAAMA,EAAEC,iBAAkBC,aAAa,MAAKvC,SAAA,EAC9DM,EAAAA,EAAAA,MAAA,UAAQkC,KAAK,OAAOC,MAAa,OAANvD,QAAM,IAANA,OAAM,EAANA,EAAQwD,KAAMrC,SAAUA,EAASL,SAAA,EAC1DD,EAAAA,EAAAA,KAAA,UAAQ0C,MAAM,MAAKzC,SAAE0B,EAAE,+BACvB3B,EAAAA,EAAAA,KAAA,UAAQ0C,MAAM,UAASzC,SAAE0B,EAAE,mBAC3B3B,EAAAA,EAAAA,KAAA,UAAQ0C,MAAM,UAASzC,SAAE0B,EAAE,mBAC3B3B,EAAAA,EAAAA,KAAA,UAAQ0C,MAAM,kBAAiBzC,SAAE0B,EAAE,gCACnC3B,EAAAA,EAAAA,KAAA,UAAQ0C,MAAM,OAAMzC,SAAE0B,EAAE,sBAE1B3B,EAAAA,EAAAA,KAAA,SACE4C,KAAK,OACLH,KAAK,OACLC,MAAa,OAANvD,QAAM,IAANA,OAAM,EAANA,EAAQ0D,KACfvC,SAAUA,EACVwC,YAAanB,EAAE,gEAET,EAId,EAAezB,EAAAA,KAAWC,G,MCtB1B,MAAMO,EAAUC,EAAAA,GAAOoC,IAAGlC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,YAIpBV,EAAOX,IAAuC,IAAtC,MAAEuD,EAAK,MAAC3C,EAAK,OAAElB,EAAM,SAAEmB,GAASb,EAC5C,MAAM,EAAEkC,IAAMQ,EAAAA,EAAAA,MACd,OACE5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAP,SAAA,EACED,EAAAA,EAAAA,KAACD,EAAS,CAACM,MAAOA,KAClBL,EAAAA,EAAAA,KAACU,EAAO,CAAAT,UAERD,EAAAA,EAAAA,KAACG,EAAc,CAAChB,OAAQA,EAAQsB,SAAUH,QAEzC,EAIP,EAAeJ,EAAAA,KAAWE,G,oBCjB1B,MAAMM,EAAUC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qJA0CnBC,GAAiBJ,EAAAA,EAAAA,KAnCNlB,IAA0B,IAAzB,KAAEuB,EAAI,UAAEC,GAAWxB,EACnC,MAAM,IACJtB,EAAG,OACH+C,EAAM,QACNC,EAAO,OACPC,EAAM,OACNC,EAAM,UACNC,EAAS,aACTC,EAAY,UACZC,GACER,EAEJ,OACET,EAAAA,EAAAA,MAAA,MAAIU,UAAWA,EAAUhB,SAAA,EACvBM,EAAAA,EAAAA,MAACkB,EAAAA,GAAI,CAACC,GAAI,eAAiBvD,EAAK8C,UAAU,UAAShB,SAAA,CAChDiB,GAAM,IAAAjD,QAAQ0D,EAAAA,EAAAA,GAAE,gBAAK,KACrBR,EACAI,EAAe,GAAC,IAAAtD,OAAQsD,EAAaK,iBAAgB,SAExDrB,EAAAA,EAAAA,MAAA,OAAKU,UAAU,YAAWhB,SAAA,EACxBM,EAAAA,EAAAA,MAAA,QAAMU,UAAU,SAAQhB,SAAA,CACrBmB,EACW,OAAXC,GAAe,IAAApD,OAAQoD,EAAOQ,MAAK,QAErCP,EAAY,IACXf,EAAAA,EAAAA,MAAA,QAAMU,UAAU,aAAYhB,SAAA,EACzB0B,EAAAA,EAAAA,GAAE,sBAAO,KAAGL,EAAUM,qBAG3B5B,EAAAA,EAAAA,KAAA,QAAMiB,UAAU,WAAUhB,SAAEuB,SAE3B,GAIcb,CAAgBmB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,gRAmBjCiB,EAASpB,EAAAA,GAAOqB,GAAEC,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,QAElBf,EAAYmC,IAAgB,IAAf,MAAE7B,GAAO6B,EAC1B,MAAM,EAAEP,IAAMQ,EAAAA,EAAAA,MAEd,OACEnC,EAAAA,EAAAA,KAACU,EAAO,CAAAT,SACLI,GAASA,EAAM+B,OAAS,EACvB/B,EAAMb,KAAKwB,IAAShB,EAAAA,EAAAA,KAACe,EAAc,CAAgBC,KAAMA,GAAhBA,EAAK7C,QAE9C6B,EAAAA,EAAAA,KAAC+B,EAAM,CAAA9B,SAAE0B,EAAE,4EAEL,EAId,EAAezB,EAAAA,KAAWH,G,MC/E1B,MAAMsC,EAAU1B,EAAAA,GAAO5C,KAAI8C,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qJAOrBX,EAAiBV,IAA2B,IAA1B,OAAEN,EAAM,SAAEmB,GAAUb,EAC1C,MAAM,EAAEkC,IAAMQ,EAAAA,EAAAA,MACd,OACE5B,EAAAA,EAAAA,MAAC8B,EAAO,CAAC5B,SAAW6B,GAAMA,EAAEC,iBAAkBC,aAAa,MAAKvC,SAAA,EAC9DM,EAAAA,EAAAA,MAAA,UAAQkC,KAAK,OAAOC,MAAa,OAANvD,QAAM,IAANA,OAAM,EAANA,EAAQwD,KAAMrC,SAAUA,EAASL,SAAA,EAC1DD,EAAAA,EAAAA,KAAA,UAAQ0C,MAAM,MAAKzC,SAAE0B,EAAE,+BACvB3B,EAAAA,EAAAA,KAAA,UAAQ0C,MAAM,UAASzC,SAAE0B,EAAE,mBAC3B3B,EAAAA,EAAAA,KAAA,UAAQ0C,MAAM,UAASzC,SAAE0B,EAAE,mBAC3B3B,EAAAA,EAAAA,KAAA,UAAQ0C,MAAM,kBAAiBzC,SAAE0B,EAAE,gCACnC3B,EAAAA,EAAAA,KAAA,UAAQ0C,MAAM,OAAMzC,SAAE0B,EAAE,sBAE1B3B,EAAAA,EAAAA,KAAA,SACE4C,KAAK,OACLH,KAAK,OACLC,MAAa,OAANvD,QAAM,IAANA,OAAM,EAANA,EAAQ0D,KACfvC,SAAUA,EACVwC,YAAanB,EAAE,gEAET,EAId,EAAezB,EAAAA,KAAWC,G,MC3B1B,MAAMO,EAAUC,EAAAA,GAAOoC,IAAGlC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,YAIpBV,EAAOX,IAAuC,IAAtC,MAAEuD,EAAK,MAAC3C,EAAK,OAAElB,EAAM,SAAEmB,GAASb,EAC5C,MAAM,EAAEkC,IAAMQ,EAAAA,EAAAA,MACd,OACE5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAP,SAAA,EACED,EAAAA,EAAAA,KAACD,EAAS,CAACM,MAAOA,KAClBL,EAAAA,EAAAA,KAACU,EAAO,CAAAT,UAERD,EAAAA,EAAAA,KAACG,EAAc,CAAChB,OAAQA,EAAQsB,SAAUH,QAEzC,EAIP,EAAeJ,EAAAA,KAAWE,GCA1B,MAAM6C,EAAgBxD,IAA4B,IAADyD,EAAA,IAA1B,aAAEC,EAAY,IAAErF,GAAK2B,EAC1C,MAAO2D,IAAgBC,EAAAA,EAAAA,OACfvF,IAAKwF,IAASC,EAAAA,EAAAA,KAEtBzF,EAAS,QAANoF,EAAGpF,SAAG,IAAAoF,EAAAA,EAAII,EAEb,MAAON,EAAOQ,IAAYC,EAAAA,EAAAA,UAAS,OAC5BpD,EAAOqD,IAAYD,EAAAA,EAAAA,UAAS,OAC5BE,EAAYC,IAAiBH,EAAAA,EAAAA,UAAS,OACtCtE,EAAQ0E,IAAaJ,EAAAA,EAAAA,WAAS,IChCxB,SAAwBL,GACnC,MAAM/D,EAAK,CAAC,EACZ,GAAI+D,EAAaU,KAAO,EACtB,IAAK,MAAOpE,EAAGC,KAAMyD,EACnB/D,EAAGK,GAAKC,EAGZ,OAAON,CACT,CDwB2C0E,CAAeX,MAE1DY,EAAAA,EAAAA,YAAU,KACR,WACE,IAEE,MAAMC,QAAanE,EAAAA,EAAAA,GAAUhC,GAC7B0F,EAASS,GAETd,GAAgBA,EAAac,EAAKC,OAGlC,MAAM,MAAE7D,EAAK,WAAEsD,SAAqBzE,EAAAA,EAAAA,IAAQpB,EAAKqB,GACjDuE,EAASrD,GACTuD,EAAcD,EAChB,CAAE,MAAO9E,GACPC,QAAQC,MAAMF,EAChB,CACD,EAfD,EAeI,GACH,CAACf,EAAKqB,EAAQgE,IAEjB,MAAMgB,GAAcC,EAAAA,EAAAA,cAAaC,IAC/BR,GAAW1E,IAAM,IAAWA,EAAQkF,UAAQ,GAC3C,IAEG/D,GAAW8D,EAAAA,EAAAA,cAAa9B,IAC5BuB,GAAW1E,IAAM,IACZA,EACH,CAACmD,EAAEgC,OAAO7B,MAAOH,EAAEgC,OAAO5B,SACzB,GACF,IAEH,IAAKM,IAAU3C,EACb,OAAOL,EAAAA,EAAAA,KAACuE,EAAAA,EAAO,IAGjB,MAAM,KAAEC,GAASxB,EACX5C,EAzDR,SAAmBoE,GACjB,OAAQA,GACN,IAAK,UACH,OAAOC,EAAAA,EACP,IAAK,SACL,OAAOC,EACT,QACE,OAAOC,EAEb,CAgDeC,CAAUJ,GAEvB,OACEjE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAP,SAAA,EACED,EAAAA,EAAAA,KAACI,EAAI,CAACC,MAAOA,EAAOlB,OAAQA,EAAQmB,SAAUA,KAC9CN,EAAAA,EAAAA,KAAC6E,EAAAA,EAAU,CAAClB,WAAYA,EAAYmB,QAASX,MAC5C,EAIP,EAAejE,EAAAA,KAAW+C,E,8GEzE1B,MAAM7C,EAAOA,KACZ,MAAO2E,EAAW5B,IAAgBM,EAAAA,EAAAA,UAAS,IAG1C,OACElD,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAP,SAAA,EACED,EAAAA,EAAAA,KAACgF,EAAAA,GAAM,CAAA/E,UACLD,EAAAA,EAAAA,KAAA,SAAAC,SAAQ8E,OAEVxE,EAAAA,EAAAA,MAAC0E,EAAAA,GAAQ,CAAAhF,SAAA,EACPD,EAAAA,EAAAA,KAACkF,EAAAA,EAAS,CAAAjF,SAAE8E,KACZ/E,EAAAA,EAAAA,KAACiD,EAAAA,EAAa,CAACE,aAAcA,SAE9B,EAIP,EAAejD,EAAAA,KAAWE,E,yGCrB1B,MAAM,KAAE+E,GAASC,EAAAA,EAEJH,EAAWtE,EAAAA,GAAOoC,IAAGlC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iGAOrBuE,EAAe1E,EAAAA,GAAOoC,IAAGjB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,kCAIzBwE,EAAe3E,EAAAA,GAAOoC,IAAGd,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,yJASzByE,EAAe5E,EAAAA,GAAOoC,IAAGyC,IAAAA,GAAA1E,EAAAA,EAAAA,GAAA,mJAMVqE,GAGHxE,EAAAA,GAAOoC,IAAG0C,IAAAA,GAAA3E,EAAAA,EAAAA,GAAA,2C,8IC7BnC,MAAMJ,EAAUC,EAAAA,GAAOoC,IAAGlC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iNAepByD,EAAUA,KAEZvE,EAAAA,EAAAA,KAACU,EAAO,CAAAT,UACND,EAAAA,EAAAA,KAAA,OAAK0F,IAAKC,EAAOC,IAAI,cAK3B,EAAe1F,EAAAA,KAAWqE,E,2GChB1B,MAAM7D,EAAUC,EAAAA,GAAOoC,IAAGlC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yfA8BpB+D,EAAapF,IAA8B,IAA7B,WAAEkE,EAAU,QAAEmB,GAASrF,EACzC,MAAM,KAAE4E,EAAI,MAAEwB,EAAK,cAAEC,EAAa,cAAEC,EAAa,WAAEC,GAAerC,EAElE,OACEkC,EAAMzD,OAAS,IACb7B,EAAAA,EAAAA,MAACG,EAAO,CAAAT,SAAA,CACL6F,EAAgB,IACfvF,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAP,SAAA,EACED,EAAAA,EAAAA,KAACiG,EAAAA,IAAW,CAACnB,QAASA,IAAMA,EAAQ,GAAI7D,UAAU,UAClDjB,EAAAA,EAAAA,KAACkG,EAAAA,IAAgB,CACfpB,QAASA,IAAMA,EAAQqB,OAAOL,IAC9B7E,UAAU,YAIf4E,EAAMrG,KAAK4G,IACVpG,EAAAA,EAAAA,KAAA,OAEE8E,QAASA,IAAMA,EAAQqB,OAAOC,EAAE,KAChCnF,UAAW,OAASoF,IAAW,CAAE,MAAOF,OAAOC,EAAE,MAAQ/B,IAAQpE,SAEhEmG,EAAE,IAJE,OAASA,EAAE,MAOnBL,EAAgB,IACfxF,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAP,SAAA,EACED,EAAAA,EAAAA,KAACsG,EAAAA,IAAc,CACbxB,QAASA,IAAMA,EAAQqB,OAAOJ,IAC9B9E,UAAU,UAEZjB,EAAAA,EAAAA,KAACuG,EAAAA,IAAU,CACTzB,QAASA,IAAMA,EAAQqB,OAAOH,IAC9B/E,UAAU,cAKnB,EAIL,EAAef,EAAAA,KAAW2E,E,qEC/E1B,MAAM,SAAE2B,GAAaC,EAAAA,EAERvB,EAAYvE,EAAAA,GAAO+F,GAAE7F,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0IACnB0F,E,0CCNR,MAAMpB,EAAQ,CACnBuB,QAAS,UACTC,UAAW,UACXC,QAAS,UACTC,OAAQ,UACRC,QAAS,UACTC,KAAM,UACNC,MAAO,UACP9B,KAAM,UACN+B,MAAO,OACPC,IAAK,UACLC,OAAQ,WAGGC,EAAc,CACzBV,QAAS,CAACvB,EAAMuB,QAAS,OAAQvB,EAAMuB,SACvCC,UAAW,CAACxB,EAAMwB,UAAW,OAAQxB,EAAMwB,WAC3CC,QAAS,CAACzB,EAAMyB,QAAS,OAAQzB,EAAMyB,SACvCC,OAAQ,CAAC1B,EAAM0B,OAAQ,OAAQ1B,EAAM0B,QACrCC,QAAS,CAAC3B,EAAM2B,QAAS,UAAW,WACpCC,KAAM,CAAC5B,EAAM4B,KAAM,OAAQ5B,EAAM4B,MACjCC,MAAO,CAAC7B,EAAM6B,MAAO,UAAW,WAChC9B,KAAM,CAACC,EAAMD,KAAM,OAAQC,EAAMD,MACjCgC,IAAK,CAAC/B,EAAM+B,IAAK,OAAQ/B,EAAM+B,K,kCCvBjC,MAQA,EARiB,CACfG,MAAO,UACPC,OAAQ,OACRC,OAAQ,UACRC,IAAK,SACLjB,SAAU,O","sources":["board/apis/apiBoard.js","board/apis/apiConfig.js","board/components/skins/gallery/ListItems.js","board/components/skins/gallery/ListSearchForm.js","board/components/skins/gallery/List.js","board/components/skins/default/ListItems.js","board/components/skins/default/ListSearchForm.js","board/components/skins/default/List.js","board/components/skins/review/ListItems.js","board/components/skins/review/ListSearchForm.js","board/components/skins/review/List.js","board/containers/ListContainer.js","commons/libs/getQueryString.js","board/pages/List.js","commons/components/LayoutBox.js","commons/components/Loading.js","commons/components/Pagination.js","commons/components/TitleBox.js","styles/color.js","styles/fontSize.js"],"sourcesContent":["import apiRequest from '../../commons/libs/apiRequest';\r\nimport requestData from '../../commons/libs/requestData';\r\n\r\nexport const write = (bid, form) =>\r\n  saveProcess(`/board/write/${bid}`, 'POST', form);\r\n\r\nexport const update = (seq, form) =>\r\n  saveProcess(`/board/update/${seq}`, 'PATCH', form);\r\n\r\nfunction saveProcess(url, method, form) {\r\n  return new Promise((resolve, reject) => {\r\n    (async () => {\r\n      try {\r\n        const res = await apiRequest(url, method, form);\r\n        if (res.status === 201) {\r\n          resolve(res.data.data);\r\n          return;\r\n        }\r\n\r\n        reject(res.data);\r\n      } catch (err) {\r\n        console.error(err);\r\n        reject(err);\r\n      }\r\n    })();\r\n  });\r\n}\r\n\r\n// 게시글 하나 조회\r\nexport const getInfo = (seq) => requestData(`/board/info/${seq}`);\r\n\r\n// 게시글 목록 조회\r\nexport const getList = (bid, search) => {\r\n  search = search ?? {};\r\n  let qs = Object.entries(search)\r\n    .map(([k, v]) => `${k}=${v}`)\r\n    .join('&');\r\n\r\n  qs = qs ? `?${qs}` : qs;\r\n\r\n  const url = `/board/list/${bid}${qs}`;\r\n\r\n  return requestData(url);\r\n};\r\n\r\nexport const deleteData = (seq) =>\r\n  requestData(`/board/delete/${seq}`, 'DELETE');","import requestData from '../../commons/libs/requestData';\r\n\r\nexport default function apiConfig(bid) {\r\n  return requestData(`/board/config/${bid}`);\r\n}","import React from 'react';\r\n\r\nconst ListItems = () => {\r\n  return <h1>리스트</h1>;\r\n};\r\n\r\nexport default React.memo(ListItems);","import React from 'react';\r\n\r\nconst ListSearchForm = () => {\r\n  return <h1>검색양식</h1>;\r\n};\r\n\r\nexport default React.memo(ListSearchForm);\r\n","import React from 'react';\r\nimport ListItems from './ListItems';\r\nimport ListSearchForm from './ListSearchForm';\r\n\r\nconst List = ({ items, search, onChange}) => {\r\n  return (\r\n    <>\r\n      <ListItems items={items} />\r\n      <ListSearchForm search={search} onSubmit={onChange} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(List);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { t } from 'i18next';\r\n\r\nconst Wrapper = styled.ul``;\r\n\r\nconst ListItem = ({ item, className }) => {\r\n  const {\r\n    seq,\r\n    notice,\r\n    subject,\r\n    poster,\r\n    member,\r\n    viewCount,\r\n    commentCount,\r\n    createdAt,\r\n  } = item;\r\n\r\n  return (\r\n    <li className={className}>\r\n      <Link to={'/board/view/' + seq} className=\"subject\">\r\n        {notice && `[${t('공지')}]`}\r\n        {subject}\r\n        {commentCount > 0 && `(${commentCount.toLocaleString()})`}\r\n      </Link>\r\n      <div className=\"post-info\">\r\n        <span className=\"poster\">\r\n          {poster}\r\n          {member !== null && `(${member.email})`}\r\n        </span>\r\n        {viewCount > 0 && (\r\n          <span className=\"view-count\">\r\n            {t('조회수')}: {viewCount.toLocaleString()}\r\n          </span>\r\n        )}\r\n        <span className=\"datetime\">{createdAt}</span>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst StyledListItem = styled(ListItem)`\r\n  display: flex;\r\n  border-bottom: 1px solid #ccc;\r\n  padding: 0 10px;\r\n  height: 45px;\r\n  align-items: center;\r\n\r\n  .subject {\r\n    flex-grow: 1;\r\n    height: 44px;\r\n    line-height: 44px;\r\n  }\r\n\r\n  .post-info {\r\n    width: 300px;\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nconst NoData = styled.li``;\r\n\r\nconst ListItems = ({ items }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Wrapper>\r\n      {items && items.length > 0 ? (\r\n        items.map((item) => <StyledListItem key={item.seq} item={item} />)\r\n      ) : (\r\n        <NoData>{t('조회된_게시글이_없습니다.')}</NoData>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(ListItems);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst FormBox = styled.form``;\r\n\r\nconst ListSearchForm = ({ search, onChange }) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <FormBox onSubmit={(e) => e.preventDefault()} autoComplete=\"off\">\r\n      <select name=\"sopt\" value={search?.sopt} onChange={onChange}>\r\n        <option value=\"ALL\">{t('통합검색')}</option>\r\n        <option value=\"SUBJECT\">{t('제목')}</option>\r\n        <option value=\"CONTENT\">{t('내용')}</option>\r\n        <option value=\"SUBJECT_CONTENT\">{t('제목+내용')}</option>\r\n        <option value=\"NAME\">{t('이름')}</option>\r\n      </select>\r\n      <input\r\n        type=\"text\"\r\n        name=\"skey\"\r\n        value={search?.skey}\r\n        onChange={onChange}\r\n        placeholder={t('검색어를_입력하세요.')}\r\n      />\r\n    </FormBox>\r\n  );\r\n};\r\n\r\nexport default React.memo(ListSearchForm);","import React from 'react';\r\nimport ListItems from './ListItems';\r\nimport ListSearchForm from './ListSearchForm';\r\nimport { useTranslation } from 'react-i18next';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n\r\n`\r\n\r\nconst List = ({ board,items, search, onChange}) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <>\r\n      <ListItems items={items} />\r\n      <Wrapper>\r\n     \r\n      <ListSearchForm search={search} onSubmit={onChange} />\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(List);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { t } from 'i18next';\r\n\r\nconst Wrapper = styled.ul`\r\n  width: 100%;\r\n  padding: 20px;\r\n  background-color: #f5f5f5; /* 배경을 핑크색으로 */\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst ListItem = ({ item, className }) => {\r\n  const {\r\n    seq,\r\n    notice,\r\n    subject,\r\n    poster,\r\n    member,\r\n    viewCount,\r\n    commentCount,\r\n    createdAt,\r\n  } = item;\r\n\r\n  return (\r\n    <li className={className}>\r\n      <Link to={'/board/view/' + seq} className=\"subject\">\r\n        {notice && `[${t('공지')}]`}\r\n        {subject}\r\n        {commentCount > 0 && `(${commentCount.toLocaleString()})`}\r\n      </Link>\r\n      <div className=\"post-info\">\r\n        <span className=\"poster\">\r\n          {poster}\r\n          {member !== null && `(${member.email})`}\r\n        </span>\r\n        {viewCount > 0 && (\r\n          <span className=\"view-count\">\r\n            {t('조회수')}: {viewCount.toLocaleString()}\r\n          </span>\r\n        )}\r\n        <span className=\"datetime\">{createdAt}</span>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst StyledListItem = styled(ListItem)`\r\n  display: flex;\r\n  border-bottom: 1px solid #ccc;\r\n  padding: 0 10px;\r\n  height: 45px;\r\n  align-items: center;\r\n\r\n  .subject {\r\n    flex-grow: 1;\r\n    height: 44px;\r\n    line-height: 44px;\r\n  }\r\n\r\n  .post-info {\r\n    width: 300px;\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nconst NoData = styled.li``;\r\n\r\nconst ListItems = ({ items }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Wrapper>\r\n      {items && items.length > 0 ? (\r\n        items.map((item) => <StyledListItem key={item.seq} item={item} />)\r\n      ) : (\r\n        <NoData>{t('조회된_게시글이_없습니다.')}</NoData>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(ListItems);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst FormBox = styled.form`\r\n  width: 100%;\r\n  padding: 20px;\r\n  background-color: #f5f5f5; /* 배경을 핑크색으로 */\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst ListSearchForm = ({ search, onChange }) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <FormBox onSubmit={(e) => e.preventDefault()} autoComplete=\"off\">\r\n      <select name=\"sopt\" value={search?.sopt} onChange={onChange}>\r\n        <option value=\"ALL\">{t('통합검색')}</option>\r\n        <option value=\"SUBJECT\">{t('제목')}</option>\r\n        <option value=\"CONTENT\">{t('내용')}</option>\r\n        <option value=\"SUBJECT_CONTENT\">{t('제목+내용')}</option>\r\n        <option value=\"NAME\">{t('이름')}</option>\r\n      </select>\r\n      <input\r\n        type=\"text\"\r\n        name=\"skey\"\r\n        value={search?.skey}\r\n        onChange={onChange}\r\n        placeholder={t('검색어를_입력하세요.')}\r\n      />\r\n    </FormBox>\r\n  );\r\n};\r\n\r\nexport default React.memo(ListSearchForm);\r\n","import React from 'react';\r\nimport ListItems from './ListItems';\r\nimport ListSearchForm from './ListSearchForm';\r\nimport { useTranslation } from 'react-i18next';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n\r\n`\r\n\r\nconst List = ({ board,items, search, onChange}) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <>\r\n      <ListItems items={items} />\r\n      <Wrapper>\r\n     \r\n      <ListSearchForm search={search} onSubmit={onChange} />\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(List);","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useParams, useSearchParams } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Loading from '../../commons/components/Loading';\r\nimport apiConfig from '../apis/apiConfig';\r\nimport { getList } from '../apis/apiBoard';\r\nimport getQueryString from '../../commons/libs/getQueryString';\r\nimport Pagination from '../../commons/components/Pagination';\r\nimport DefaultList from '../components/skins/default/List'; // 기본 스킨\r\nimport GalleryList from '../components/skins/gallery/List'; // 갤러리 스킨\r\nimport ReviewList from '../components/skins/review/List';\r\n\r\nfunction skinRoute(skin) {\r\n  switch (skin) {\r\n    case 'gallery':\r\n      return GalleryList;\r\n      case 'review':\r\n      return ReviewList;\r\n    default:\r\n      return DefaultList;\r\n  }\r\n}\r\n\r\nconst ListContainer = ({ setPageTitle, bid }) => {\r\n  const [searchParams] = useSearchParams();\r\n  const { bid: _bid } = useParams();\r\n\r\n  bid = bid ?? _bid;\r\n\r\n  const [board, setBoard] = useState(null);\r\n  const [items, setItems] = useState(null);\r\n  const [pagination, setPagination] = useState(null);\r\n  const [search, setSearch] = useState(() => getQueryString(searchParams));\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        // 게시판 설정\r\n        const res1 = await apiConfig(bid);\r\n        setBoard(res1);\r\n\r\n        setPageTitle && setPageTitle(res1.bname);\r\n\r\n        // 게시글 목록\r\n        const { items, pagination } = await getList(bid, search);\r\n        setItems(items);\r\n        setPagination(pagination);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    })();\r\n  }, [bid, search, setPageTitle]);\r\n\r\n  const onPageClick = useCallback((page) => {\r\n    setSearch((search) => ({ ...search, page }));\r\n  }, []);\r\n\r\n  const onChange = useCallback((e) => {\r\n    setSearch((search) => ({\r\n      ...search,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  }, []);\r\n\r\n  if (!board || !items) {\r\n    return <Loading />;\r\n  }\r\n\r\n  const { skin } = board;\r\n  const List = skinRoute(skin);\r\n\r\n  return (\r\n    <>\r\n      <List items={items} search={search} onChange={onChange} />\r\n      <Pagination pagination={pagination} onClick={onPageClick} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(ListContainer);\r\n","export default function getQueryString(searchParams) {\r\n    const qs = {};\r\n    if (searchParams.size > 0) {\r\n      for (const [k, v] of searchParams) {\r\n        qs[k] = v;\r\n      }\r\n    }\r\n    return qs;\r\n  }","import React, { useState } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { OuterBox } from '../../commons/components/LayoutBox';\r\nimport { MainTitle } from '../../commons/components/TitleBox';\r\nimport ListContainer from '../containers/ListContainer';\r\n\r\nconst List = () => {\r\n const [pageTitle, setPageTitle] = useState('');\r\n\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{pageTitle}</title>\r\n      </Helmet>\r\n      <OuterBox>\r\n        <MainTitle>{pageTitle}</MainTitle>\r\n        <ListContainer setPageTitle={setPageTitle} />\r\n      </OuterBox>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(List);","import styled from 'styled-components';\r\nimport { color } from '../../styles/color';\r\nconst { dark } = color;\r\n\r\nexport const OuterBox = styled.div`\r\n  max-width: 900px;\r\n  min-width: 700px;\r\n  padding: 25px 50px;\r\n  margin: 50px auto;\r\n`;\r\n\r\nexport const MainOuterBox = styled.div`\r\n  margin: 0 auto 50px;\r\n`;\r\n\r\nexport const ListOuterBox = styled.div`\r\n  max-width: 900px;\r\n  min-width: 700px;\r\n  box-shadow: 0 0 20px #c9c9c9;\r\n  padding: 25px 50px;\r\n  margin: 50px auto;\r\n  border-radius: 3px;\r\n`;\r\n\r\nexport const ChatOuterBox = styled.div`\r\n  max-width: 900px;\r\n  min-width: 700px;\r\n  padding: 50px;\r\n  margin: 50px auto;\r\n  border-radius: 20px;\r\n  box-shadow: 2px 2px 5px ${dark};\r\n`;\r\n\r\nexport const OuterChat = styled.div`\r\n  width: 500px;\r\n  margin: auto;\r\n`;","import React from 'react';\r\nimport image from '../../images/loading.webp';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  position: fixed;\r\n  top: calc(50% - 75px);\r\n  left: calc(50% - 75px);\r\n  width: 150px;\r\n  height: 150px;\r\n  z-index: 100;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <Wrapper>\r\n      <img src={image} alt=\"loading\" />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(Loading);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport classNames from 'classnames';\r\n\r\nimport {\r\n  MdFirstPage,\r\n  MdLastPage,\r\n  MdNavigateNext,\r\n  MdNavigateBefore,\r\n} from 'react-icons/md';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  max-width: 450px;\r\n  min-width: 100px;\r\n  margin: 20px auto;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  .page {\r\n    min-width: 35px;\r\n    max-width: 45px;\r\n    padding: 0 5px;\r\n    height: 35px;\r\n    line-height: 33px;\r\n    text-align: center;\r\n    font-size: 1.15rem;\r\n    border: 1px solid #000;\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n  }\r\n  .page + .page {\r\n    margin-left: 3px;\r\n  }\r\n\r\n  .page.on {\r\n    background: #000;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst Pagination = ({ pagination, onClick }) => {\r\n  const { page, pages, prevRangePage, nextRangePage, totalPages } = pagination;\r\n\r\n  return (\r\n    pages.length > 0 && (\r\n      <Wrapper>\r\n        {prevRangePage > 0 && (\r\n          <>\r\n            <MdFirstPage onClick={() => onClick(1)} className=\"page\" />\r\n            <MdNavigateBefore\r\n              onClick={() => onClick(Number(prevRangePage))}\r\n              className=\"page\"\r\n            />\r\n          </>\r\n        )}\r\n        {pages.map((p) => (\r\n          <div\r\n            key={'page' + p[0]}\r\n            onClick={() => onClick(Number(p[0]))}\r\n            className={'page' + classNames({ ' on': Number(p[0]) === page })}\r\n          >\r\n            {p[0]}\r\n          </div>\r\n        ))}\r\n        {nextRangePage > 0 && (\r\n          <>\r\n            <MdNavigateNext\r\n              onClick={() => onClick(Number(nextRangePage))}\r\n              className=\"page\"\r\n            />\r\n            <MdLastPage\r\n              onClick={() => onClick(Number(totalPages))}\r\n              className=\"page\"\r\n            />\r\n          </>\r\n        )}\r\n      </Wrapper>\r\n    )\r\n  );\r\n};\r\n\r\nexport default React.memo(Pagination);\r\n","import styled from 'styled-components';\r\nimport fontSize from '../../styles/fontSize';\r\n\r\nconst { extraBig } = fontSize;\r\n\r\nexport const MainTitle = styled.h1`\r\n  font-size: ${extraBig};\r\n  font-weight: bold;\r\n  padding: 0 15px 15px;\r\n  margin: 0 0 20px;\r\n  line-height: 1;\r\n  text-align: center;\r\n`;\r\n","export const color = {\r\n  primary: '#007bff',\r\n  secondary: '#6c757d',\r\n  success: '#28a745',\r\n  danger: '#dc3545',\r\n  warning: '#ffc107',\r\n  info: '#17a2b8',\r\n  light: '#f8f9fa',\r\n  dark: '#515151',\r\n  black: '#000',\r\n  jmt: '#ff3d00',\r\n  shadow: '#c9c9c9',\r\n};\r\n\r\nexport const buttonColor = {\r\n  primary: [color.primary, '#fff', color.primary],\r\n  secondary: [color.secondary, '#fff', color.secondary],\r\n  success: [color.success, '#fff', color.success],\r\n  danger: [color.danger, '#fff', color.danger],\r\n  warning: [color.warning, '#212529', '#212529'],\r\n  info: [color.info, '#fff', color.info],\r\n  light: [color.light, '#212529', '#212529'],\r\n  dark: [color.dark, '#fff', color.dark],\r\n  jmt: [color.jmt, '#fff', color.jmt],\r\n};\r\n","const fontSize = {\r\n  small: '0.75rem',\r\n  normal: '1rem',\r\n  medium: '1.25rem',\r\n  big: '1.5rem',\r\n  extraBig: '2rem',\r\n};\r\n\r\nexport default fontSize;\r\n"],"names":["write","bid","form","saveProcess","concat","update","seq","url","method","Promise","resolve","reject","res","apiRequest","status","data","err","console","error","getInfo","requestData","getList","search","_search","qs","Object","entries","map","_ref","k","v","join","deleteData","apiConfig","ListItems","_jsx","children","React","ListSearchForm","List","items","onChange","_jsxs","_Fragment","onSubmit","Wrapper","styled","ul","_templateObject","_taggedTemplateLiteral","StyledListItem","item","className","notice","subject","poster","member","viewCount","commentCount","createdAt","Link","to","t","toLocaleString","email","_templateObject2","NoData","li","_templateObject3","_ref2","useTranslation","length","FormBox","e","preventDefault","autoComplete","name","value","sopt","type","skey","placeholder","div","board","ListContainer","_bid2","setPageTitle","searchParams","useSearchParams","_bid","useParams","setBoard","useState","setItems","pagination","setPagination","setSearch","size","getQueryString","useEffect","res1","bname","onPageClick","useCallback","page","target","Loading","skin","GalleryList","ReviewList","DefaultList","skinRoute","Pagination","onClick","pageTitle","Helmet","OuterBox","MainTitle","dark","color","MainOuterBox","ListOuterBox","ChatOuterBox","_templateObject4","_templateObject5","src","image","alt","pages","prevRangePage","nextRangePage","totalPages","MdFirstPage","MdNavigateBefore","Number","p","classNames","MdNavigateNext","MdLastPage","extraBig","fontSize","h1","primary","secondary","success","danger","warning","info","light","black","jmt","shadow","buttonColor","small","normal","medium","big"],"sourceRoot":""}