{"version":3,"file":"static/js/1260.6f78066a.chunk.js","mappings":"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","sources":["board/components/skins/gallery/Form.js","commons/components/Buttons.js","commons/components/FileItems.js","commons/components/FileUpload.js","commons/components/InputBox.js","commons/components/MessageBox.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from 'react';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport {\r\n  ClassicEditor,\r\n  Image,\r\n  ImageInsert,\r\n  Bold,\r\n  Essentials,\r\n  Italic,\r\n  Paragraph,\r\n} from 'ckeditor5';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport MessageBox from '../../../../commons/components/MessageBox';\r\nimport InputBox from '../../../../commons/components/InputBox';\r\nimport UserInfoContext from '../../../../member/modules/UserInfoContext';\r\nimport { FaCheckSquare, FaSquare } from 'react-icons/fa';\r\nimport { MidButton } from '../../../../commons/components/Buttons';\r\nimport FileUpload from '../../../../commons/components/FileUpload';\r\nimport FileItems from '../../../../commons/components/FileItems';\r\n\r\nimport 'ckeditor5/ckeditor5.css';\r\n\r\nconst Wrapper = styled.form`\r\n  .ck-editor__editable {\r\n    height: 350px;\r\n  }\r\n  textarea {\r\n    width: 100%;\r\n    height: 350px;\r\n    border: 1px solid #d5d5d5;\r\n    resize: none;\r\n    padding: 15px;\r\n  }\r\n`;\r\n\r\nconst Form = ({\r\n  board,\r\n  form,\r\n  onSubmit,\r\n  onToggleNotice,\r\n  errors,\r\n  fileUploadCallback,\r\n  fileDeleteCallback,\r\n  onChange,\r\n}) => {\r\n  const [mounted, setMounted] = useState(false);\r\n  const [editor, setEditor] = useState(null);\r\n  const { useEditor, useUploadImage, useUploadFile } = board;\r\n  const { t } = useTranslation();\r\n  const {\r\n    states: { isLogin, isAdmin },\r\n  } = useContext(UserInfoContext);\r\n\r\n  useEffect(() => {\r\n    setMounted(true);\r\n\r\n    return () => {\r\n      setMounted(false);\r\n    };\r\n  }, []);\r\n\r\n  // 이미지 에디터 첨부\r\n  const insertImageCallback = useCallback(\r\n    (url) => {\r\n      editor.execute('insertImage', { source: url });\r\n    },\r\n    [editor],\r\n  );\r\n\r\n  return (\r\n    <Wrapper onSubmit={onSubmit} autoComplete=\"off\">\r\n      <dl>\r\n        <dt>{t('작성자')}</dt>\r\n        <dd>\r\n          <InputBox\r\n            type=\"text\"\r\n            name=\"poster\"\r\n            value={form?.poster}\r\n            onChange={onChange}\r\n          />\r\n          {errors?.poster && (\r\n            <MessageBox color=\"danger\" messages={errors.poster} />\r\n          )}\r\n        </dd>\r\n      </dl>\r\n      {((form.mode === 'write' && !isLogin) ||\r\n        (form.mode === 'update' && !form?.member)) && (\r\n        <dl>\r\n          <dt>{t('비밀번호')}</dt>\r\n          <dd>\r\n            <InputBox\r\n              type=\"password\"\r\n              name=\"guestPw\"\r\n              value={form?.guestPw}\r\n              onChange={onChange}\r\n            />\r\n            {errors?.guestPw && (\r\n              <MessageBox color=\"danger\" messages={errors.guestPw} />\r\n            )}\r\n          </dd>\r\n        </dl>\r\n      )}\r\n      {isAdmin && (\r\n        <dl>\r\n          <dt>{t('공지글')}</dt>\r\n          <dd>\r\n            <label onClick={onToggleNotice}>\r\n              {form?.notice ? <FaCheckSquare /> : <FaSquare />}\r\n              {t('공지글로_등록하기')}\r\n            </label>\r\n          </dd>\r\n        </dl>\r\n      )}\r\n      <dl>\r\n        <dt>{t('제목')}</dt>\r\n        <dd>\r\n          <InputBox\r\n            type=\"text\"\r\n            name=\"subject\"\r\n            value={form?.subject}\r\n            onChange={onChange}\r\n          />\r\n          {errors?.subject && (\r\n            <MessageBox color=\"danger\" messages={errors.subject} />\r\n          )}\r\n        </dd>\r\n      </dl>\r\n      <dl>\r\n        <dt>{t('내용')}</dt>\r\n        <dd>\r\n          {useEditor ? (\r\n            mounted && (\r\n              <>\r\n                <CKEditor\r\n                  editor={ClassicEditor}\r\n                  config={{\r\n                    plugins: [\r\n                      Bold,\r\n                      Essentials,\r\n                      Italic,\r\n                      Paragraph,\r\n                      Image,\r\n                      ImageInsert,\r\n                    ],\r\n                    toolbar: [\r\n                      'bold',\r\n                      'italic',\r\n                      '|',\r\n                      'undo',\r\n                      'redo',\r\n                      '|',\r\n                      'numberedList',\r\n                      'bulletedList',\r\n                    ],\r\n                  }}\r\n                  data={form?.content}\r\n                  onReady={(editor) => setEditor(editor)}\r\n                  onChange={(_, editor) => {\r\n                    onChange({\r\n                      target: { name: 'content', value: editor.getData() },\r\n                    });\r\n                  }}\r\n                />\r\n                {editor && useUploadImage && (\r\n                  <>\r\n                    <FileUpload\r\n                      gid={form.gid}\r\n                      location=\"editor\"\r\n                      imageOnly\r\n                      color=\"primary\"\r\n                      width=\"120\"\r\n                      callback={(files) => fileUploadCallback(files, editor)}\r\n                    >\r\n                      {t('이미지_업로드')}\r\n                    </FileUpload>\r\n                    <FileItems\r\n                      files={form?.editorImages}\r\n                      mode=\"editor\"\r\n                      insertImageCallback={insertImageCallback}\r\n                      fileDeleteCallback={fileDeleteCallback}\r\n                    />\r\n                  </>\r\n                )}\r\n              </>\r\n            )\r\n          ) : (\r\n            <textarea\r\n              name=\"content\"\r\n              value={form?.content}\r\n              onChange={onChange}\r\n            ></textarea>\r\n          )}\r\n          {errors?.content && (\r\n            <MessageBox color=\"danger\" messages={errors.content} />\r\n          )}\r\n        </dd>\r\n      </dl>\r\n      {useUploadFile && (\r\n        <dl>\r\n          <dt>{t('파일첨부')}</dt>\r\n          <dd>\r\n            <FileUpload\r\n              gid={form.gid}\r\n              location=\"attach\"\r\n              width=\"120\"\r\n              color=\"primary\"\r\n              callback={fileUploadCallback}\r\n            >\r\n              {t('파일선택')}\r\n            </FileUpload>\r\n            <FileItems\r\n              files={form?.attachFiles}\r\n              mode=\"attach\"\r\n              fileDeleteCallback={fileDeleteCallback}\r\n            />\r\n          </dd>\r\n        </dl>\r\n      )}\r\n      <MidButton type=\"submit\" color=\"info\">\r\n        {t(form.mode === 'update' ? '수정하기' : '작성하기')}\r\n      </MidButton>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(Form);","import styled, { css } from 'styled-components';\r\nimport { buttonColor ,color} from '../../styles/color';\r\nimport fontSize from '../../styles/fontSize';\r\nconst { big, medium, normal } = fontSize;\r\nconst { jmt } = color;\r\n\r\n\r\nconst commonStyle = css`\r\n  width: 100%;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n`;\r\n\r\n\r\nexport const SmallButton = styled.button`\r\n  font-size: ${normal};\r\n  height: 30px;\r\n  ${commonStyle}\r\n\r\n  ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n  ${({ width }) => css`\r\n    width: ${width}px;\r\n  `}\r\n`;\r\n\r\nexport const MidButton = styled.button`\r\n  font-size: ${medium};\r\n  height: 40px;\r\n  ${commonStyle}\r\n\r\n  ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n`;\r\n\r\nexport const BigButton = styled.button`\r\n  font-size: ${big};\r\n  height: 45px;\r\n  ${commonStyle}\r\n\r\n  ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n`;\r\n\r\nexport const SearchButton = styled.button`\r\n  font-size: ${medium};\r\n  height: 40px;\r\n  ${commonStyle}\r\n\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n\r\n    ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n  ${({ width }) => css`\r\n    width: ${width}px;\r\n  `}\r\n`\r\n\r\nexport const ButtonGroup = styled.div`\r\n  display: flex;\r\n  width: ${({ width }) => (width ? `${width}px` : '100%')};\r\n  margin: 20px auto;\r\n\r\n  button {\r\n    width: 0;\r\n    flex-grow: 1;\r\n  }\r\n\r\n  button + button {\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nexport const jmtButton = styled.button`\r\n\r\n`\r\n\r\nexport const BackButton = styled.button`\r\n  font-size: ${medium};\r\n  width: 120px;\r\n  height: 40px;\r\n  background-color:${jmt}; \r\n  color: white;\r\n  border-color: white;\r\n  margin: 0 auto;\r\n  border-radius: 3px;\r\n  display: block;\r\n\r\n`;","import React from 'react';\r\n\r\nimport { FaWindowClose, FaFileUpload } from 'react-icons/fa';\r\n\r\nconst FileItems = ({\r\n  files,\r\n  mode,\r\n  insertImageCallback,\r\n  fileDeleteCallback,\r\n}) => {\r\n  return (\r\n    files &&\r\n    files.length > 0 && (\r\n      <ul>\r\n        {files.map(({ seq, fileName, fileDownloadUrl, fileUrl }) => (\r\n          <li key={seq}>\r\n            <a href={fileDownloadUrl}>{fileName}</a>\r\n            {mode === 'editor' && (\r\n              <FaFileUpload onClick={() => insertImageCallback(fileUrl)} />\r\n            )}\r\n            <FaWindowClose onClick={() => fileDeleteCallback(seq)} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  );\r\n};\r\n\r\nexport default React.memo(FileItems);","import React, { useCallback, useState } from 'react';\r\nimport apiRequest from '../libs/apiRequest';\r\nimport { SmallButton } from './Buttons';\r\nimport MessageBox from './MessageBox';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst FileUpload = ({\r\n  children,\r\n  gid,\r\n  location,\r\n  color,\r\n  imageOnly,\r\n  single,\r\n  done,\r\n  callback,\r\n  width,\r\n  imageUrl,\r\n}) => {\r\n  const [message, setMessage] = useState('');\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // 버튼 클릭 처리\r\n  const onButtonClick = useCallback(() => {\r\n    const fileEl = document.createElement('input');\r\n    fileEl.type = 'file';\r\n    fileEl.multiple = !Boolean(single);\r\n    fileEl.click();\r\n\r\n    const fileListener = (e) => {\r\n      const files = e.target.files;\r\n      try {\r\n        if (files.length === 0) {\r\n          throw new Error(t('파일을_선택하세요.'));\r\n        }\r\n\r\n        if (imageOnly) {\r\n          for (const file of files) {\r\n            if (!file.type.includes('image/')) {\r\n              throw new Error(t('이미지_형식의_파일만_업로드하세요.'));\r\n            }\r\n          }\r\n        }\r\n\r\n        if (!gid?.trim()) {\r\n          throw new Error(t('필수항목(gid)_누락'));\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('gid', gid.trim());\r\n        if (location) formData.append('location', location);\r\n\r\n        for (const file of files) {\r\n          formData.append('file', file);\r\n        }\r\n\r\n        if (single) {\r\n          formData.append('single', Boolean(single));\r\n        }\r\n\r\n        if (imageOnly) {\r\n          formData.append('imageOnly', Boolean(imageOnly));\r\n        }\r\n\r\n        if (done) {\r\n          formData.append('done', Boolean(done));\r\n        }\r\n\r\n        (async () => {\r\n          try {\r\n            const res = await apiRequest('/file/upload', 'POST', formData);\r\n            if (res.status === 201 && res.data.success) {\r\n              // 파일 업로드 후속 처리\r\n              if (typeof callback === 'function') {\r\n                callback(res.data.data);\r\n              }\r\n              // 성공시 처리\r\n              return;\r\n            }\r\n\r\n            if (res.data.message) setMessage(res.data.message);\r\n          } catch (err) {\r\n            setMessage(err.message);\r\n            console.error(err);\r\n          }\r\n        })();\r\n      } catch (err) {\r\n        setMessage(err.message);\r\n      }\r\n    };\r\n\r\n    fileEl.removeEventListener('change', fileListener);\r\n\r\n    fileEl.addEventListener('change', fileListener);\r\n  }, [single, gid, location, imageOnly, t, callback, done]);\r\n\r\n  return (\r\n    <>\r\n      {imageUrl ? (\r\n        <img\r\n          src={imageUrl}\r\n          width={width}\r\n          alt=\"profile\"\r\n          onClick={onButtonClick}\r\n        />\r\n      ) : (\r\n        <SmallButton\r\n          width={width}\r\n          type=\"button\"\r\n          color={color}\r\n          onClick={onButtonClick}\r\n        >\r\n          {children}\r\n        </SmallButton>\r\n      )}\r\n      {message && <MessageBox color=\"danger\">{message}</MessageBox>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(FileUpload);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst InputBox = styled.input`\r\n  border: 1px solid #d5d5d5;\r\n  height: 40px;\r\n  width: 100%;\r\n  padding: 0 10px;\r\n  border-radius: 3px;\r\n`;\r\n\r\nexport default React.memo(InputBox);\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { color } from '../../styles/color';\r\nimport fontSize from '../../styles/fontSize';\r\nconst { small } = fontSize;\r\n\r\nconst Box = styled.div`\r\n  text-align: center;\r\n  padding: 7px 10px;\r\n  font-size: ${small};\r\n  border-radius: 3px;\r\n  color: ${color.dark};\r\n\r\n  & + & {\r\n    margin-top: 5px;\r\n  }\r\n\r\n  ${({ color: c }) =>\r\n    c &&\r\n    css`\r\n      color: ${color[c]};\r\n      box-shadow: 2px 2px 5px ${color[c]};\r\n    `}\r\n`;\r\n\r\nconst MessageBox = ({ messages, color, children }) => {\r\n  messages = messages || [];\r\n\r\n  if (children) messages.push(children);\r\n\r\n  return (\r\n    <>\r\n      {messages.map((message, i) => (\r\n        <Box key={i} color={color}>\r\n          {message}\r\n        </Box>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(MessageBox);\r\n"],"names":["Wrapper","styled","form","_templateObject","_taggedTemplateLiteral","Form","_ref","board","onSubmit","onToggleNotice","errors","fileUploadCallback","fileDeleteCallback","onChange","mounted","setMounted","useState","editor","setEditor","useEditor","useUploadImage","useUploadFile","t","useTranslation","states","isLogin","isAdmin","useContext","UserInfoContext","useEffect","insertImageCallback","useCallback","url","execute","source","_jsxs","autoComplete","children","_jsx","InputBox","type","name","value","poster","MessageBox","color","messages","mode","member","guestPw","onClick","notice","FaCheckSquare","FaSquare","subject","_Fragment","CKEditor","ClassicEditor","config","plugins","Bold","Essentials","Italic","Paragraph","Image","ImageInsert","toolbar","data","content","onReady","_","target","getData","FileUpload","gid","location","imageOnly","width","callback","files","FileItems","editorImages","attachFiles","MidButton","React","big","medium","normal","fontSize","jmt","commonStyle","css","SmallButton","button","_templateObject2","buttonColor","_templateObject3","_ref2","_templateObject4","_templateObject5","_ref3","_templateObject6","BigButton","_templateObject7","_ref4","_templateObject8","SearchButton","_templateObject9","_ref5","_templateObject10","_ref6","_templateObject11","ButtonGroup","div","_templateObject12","_ref7","concat","BackButton","_templateObject13","_templateObject14","length","map","seq","fileName","fileDownloadUrl","fileUrl","href","FaFileUpload","FaWindowClose","single","done","imageUrl","message","setMessage","onButtonClick","fileEl","document","createElement","multiple","Boolean","click","fileListener","e","Error","file","includes","trim","formData","FormData","append","res","apiRequest","status","success","err","console","error","removeEventListener","addEventListener","src","alt","input","small","Box","dark","c","push","i"],"sourceRoot":""}