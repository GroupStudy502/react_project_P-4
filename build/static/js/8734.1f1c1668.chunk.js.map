{"version":3,"file":"static/js/8734.1f1c1668.chunk.js","mappings":"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","sources":["commons/components/Buttons.js","commons/components/InputBox.js","commons/components/MessageBox.js","member/containers/GuestOnlyContainer.js","member/components/LoginForm.js","member/containers/LoginContainer.js","member/pages/Login.js","styles/color.js"],"sourcesContent":["import styled, { css } from 'styled-components';\r\nimport { buttonColor ,color} from '../../styles/color';\r\nimport fontSize from '../../styles/fontSize';\r\nconst { big, medium, normal } = fontSize;\r\nconst { jmt } = color;\r\n\r\n\r\nconst commonStyle = css`\r\n  width: 100%;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n`;\r\n\r\n\r\nexport const SmallButton = styled.button`\r\n  font-size: ${normal};\r\n  height: 30px;\r\n  ${commonStyle}\r\n\r\n  ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n  ${({ width }) => css`\r\n    width: ${width}px;\r\n  `}\r\n`;\r\n\r\nexport const MidButton = styled.button`\r\n  font-size: ${medium};\r\n  height: 40px;\r\n  ${commonStyle}\r\n\r\n  ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n`;\r\n\r\nexport const BigButton = styled.button`\r\n  font-size: ${big};\r\n  height: 45px;\r\n  ${commonStyle}\r\n\r\n  ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n`;\r\n\r\nexport const SearchButton = styled.button`\r\n  font-size: ${medium};\r\n  height: 40px;\r\n  ${commonStyle}\r\n\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n\r\n    ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n  ${({ width }) => css`\r\n    width: ${width}px;\r\n  `}\r\n`\r\n\r\nexport const ButtonGroup = styled.div`\r\n  display: flex;\r\n  width: ${({ width }) => (width ? `${width}px` : '100%')};\r\n  margin: 20px auto;\r\n\r\n  button {\r\n    width: 0;\r\n    flex-grow: 1;\r\n  }\r\n\r\n  button + button {\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nexport const jmtButton = styled.button`\r\n\r\n`\r\n\r\nexport const BackButton = styled.button`\r\n  font-size: ${medium};\r\n  width: 120px;\r\n  height: 40px;\r\n  background-color:${jmt}; \r\n  color: white;\r\n  border-color: white;\r\n  margin: 0 auto;\r\n  border-radius: 3px;\r\n  display: block;\r\n\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst InputBox = styled.input`\r\n  border: 1px solid #d5d5d5;\r\n  height: 40px;\r\n  width: 100%;\r\n  padding: 0 10px;\r\n  border-radius: 3px;\r\n`;\r\n\r\nexport default React.memo(InputBox);\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { color } from '../../styles/color';\r\nimport fontSize from '../../styles/fontSize';\r\nconst { small } = fontSize;\r\n\r\nconst Box = styled.div`\r\n  text-align: center;\r\n  padding: 7px 10px;\r\n  font-size: ${small};\r\n  border-radius: 3px;\r\n  color: ${color.dark};\r\n\r\n  & + & {\r\n    margin-top: 5px;\r\n  }\r\n\r\n  ${({ color: c }) =>\r\n    c &&\r\n    css`\r\n      color: ${color[c]};\r\n      box-shadow: 2px 2px 5px ${color[c]};\r\n    `}\r\n`;\r\n\r\nconst MessageBox = ({ messages, color, children }) => {\r\n  messages = messages || [];\r\n\r\n  if (children) messages.push(children);\r\n\r\n  return (\r\n    <>\r\n      {messages.map((message, i) => (\r\n        <Box key={i} color={color}>\r\n          {message}\r\n        </Box>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(MessageBox);\r\n","import React, { useContext } from 'react';\r\nimport loadable from '@loadable/component';\r\nimport UserInfoContext from '../modules/UserInfoContext';\r\n\r\nconst UnAuthorized = loadable(() => import('../../commons/pages/UnAuthorized'));\r\n\r\nconst GuestOnlyContainer = ({ children }) => {\r\n  const {\r\n    states: { isLogin },\r\n  } = useContext(UserInfoContext);\r\n\r\n  return isLogin ? <UnAuthorized /> : children;\r\n};\r\n\r\nexport default React.memo(GuestOnlyContainer);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link } from 'react-router-dom';\r\nimport { FiHome } from 'react-icons/fi';\r\nimport InputBox from '../../commons/components/InputBox';\r\nimport { MidButton } from '../../commons/components/Buttons';\r\nimport MessageBox from '../../commons/components/MessageBox';\r\nimport fontSize from '../../styles/fontSize';\r\nimport loginimage from '../../images/loginimage.png';\r\n\r\nconst { small } = fontSize;\r\n\r\nconst FormBox = styled.form`\r\n  width: 350px;\r\n  margin: 0 auto;\r\n  padding-bottom: 5px;\r\n  font-size: 13px;\r\n  input {\r\n    width: 250;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\nconst LinkBox = styled.div`\r\n  width: 350px;\r\n  height: 40px;\r\n  margin: 10px auto 0;\r\n  display: flex;\r\n  border: 1px solid #d5d5d5;\r\n  border-left: 0;\r\n  border-right: 0;\r\n\r\n  a {\r\n    flex-grow: 1;\r\n    width: 0;\r\n    text-align: center;\r\n    padding: 10px 0;\r\n    font-size: 15px;\r\n\r\n    svg {\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n`;\r\n\r\nconst LoginImage = styled.img`\r\n  width: 300px;\r\n  height: 250px;\r\n  margin-left: 20px;\r\n  display: block;\r\n`;\r\n\r\nconst LoginForm = ({ form, onSubmit, onChange, errors }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      <FormBox onSubmit={onSubmit} autoComplete=\"off\">\r\n        <Link to=\"/\">\r\n          <FiHome\r\n            style={{ \r\n              width: '100%',\r\n              height: '30px',\r\n              right: '-170px',\r\n              position: 'fixed',\r\n            }}\r\n          />\r\n        </Link>\r\n        <LoginImage src={loginimage} />\r\n\r\n        <InputBox\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={form.email ?? ''}\r\n          placeholder={t('이메일')}\r\n          onChange={onChange}\r\n        />\r\n        <MessageBox messages={errors.email} color=\"danger\" />\r\n\r\n        <InputBox\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={form.password ?? ''}\r\n          placeholder={t('비밀번호')}\r\n          onChange={onChange}\r\n        />\r\n        <MessageBox messages={errors.password} color=\"danger\" />\r\n\r\n        <MidButton type=\"submit\" color=\"primary\">\r\n          {t('로그인')}\r\n        </MidButton>\r\n\r\n        <MessageBox messages={errors.global} color=\"danger\" />\r\n      </FormBox>\r\n      <LinkBox>\r\n        <Link to=\"/member/find_id\">{t('아이디_찾기')}</Link>\r\n        <Link to=\"/member/find_pw\">{t('비밀번호_찾기')}</Link>\r\n        <Link to=\"/member/join\">{t('회원가입')}</Link>\r\n      </LinkBox>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(LoginForm);\r\n","import React, { useState, useCallback, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport cookies from 'react-cookies';\r\nimport LoginForm from '../components/LoginForm';\r\nimport UserInfoContext from '../modules/UserInfoContext';\r\nimport { apiLogin, apiUser } from '../apis/apiLogin';\r\n\r\nconst LoginContainer = () => {\r\n  const [form, setForm] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n\r\n  const {\r\n    actions: { setIsLogin, setUserInfo, setIsAdmin },\r\n  } = useContext(UserInfoContext);\r\n\r\n  /**\r\n   * 로그인 처리\r\n   * 1. 데이터 검증\r\n   *    1) 필수 항목 체크 - 이메일, 비밀번호\r\n   *    2) 이메일로 가입된 회원인지 체크\r\n   *    3) 비밀번호가 일치하는지 체크\r\n   *\r\n   * 2. 로그인 처리 : 회원정보를 사이트 전역에 유지\r\n   * 3. 후속 처리 : 회원 전용 서비스 URL로 이동\r\n   *\r\n   */\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n\r\n      const _errors = {};\r\n      let hasErrors = false;\r\n\r\n      /* 데이터 검증 - 필수 항목 체크 S */\r\n      const requiredFields = {\r\n        email: t('이메일을_입력_하세요.'),\r\n        password: t('비밀번호를_입력_하세요.'),\r\n      };\r\n\r\n      for (const [field, msg] of Object.entries(requiredFields)) {\r\n        if (!form[field] || !form[field].trim()) {\r\n          _errors[field] = _errors[field] || [];\r\n          _errors[field].push(msg);\r\n          hasErrors = true;\r\n        }\r\n      }\r\n      /* 데이터 검증 - 필수 항목 체크 E */\r\n\r\n      setErrors(_errors);\r\n\r\n      if (hasErrors) {\r\n        // 검증 실패이면 로그인 처리 X\r\n        return;\r\n      }\r\n\r\n      apiLogin(form)\r\n        .then((res) => {\r\n          const token = res.data;\r\n          cookies.save('token', token, { path: '/' });\r\n\r\n          (async () => {\r\n            try {\r\n              // 로그인 처리\r\n              const user = await apiUser();\r\n\r\n              setIsLogin(true); // 로그인 상태\r\n              setUserInfo(user);\r\n\r\n              const isAdmin = user.authorities.some(\r\n                (a) => a.authority === 'ADMIN',\r\n              );\r\n              setIsAdmin(isAdmin); // 관리자 여부\r\n\r\n              /**\r\n               * 후속 처리 : 회원 전용 서비스 URL로 이동\r\n               * 예) /member/login?redirectURL=로그인 이후 이동할 경로\r\n               *\r\n               */\r\n              const redirectURL = searchParams.get('redirectUrl') || '/';\r\n              navigate(redirectURL, { replace: true });\r\n            } catch (err) {\r\n              console.error(err);\r\n            }\r\n          })();\r\n        })\r\n        .catch((err) => {\r\n          _errors.global = _errors.global ?? [];\r\n          _errors.global.push(err.message);\r\n          setErrors({ ..._errors });\r\n        });\r\n    },\r\n    [t, form, searchParams, navigate, setIsLogin, setUserInfo],\r\n  );\r\n\r\n  const onChange = useCallback((e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value.trim();\r\n    setForm((form) => ({ ...form, [name]: value }));\r\n  }, []);\r\n\r\n  return (\r\n    <LoginForm\r\n      form={form}\r\n      onSubmit={onSubmit}\r\n      onChange={onChange}\r\n      errors={errors}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(LoginContainer);","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useTranslation } from 'react-i18next';\r\nimport styled from 'styled-components';\r\nimport LoginContainer from '../containers/LoginContainer';\r\nimport GuestOnlyContainer from '../containers/GuestOnlyContainer';\r\nimport fontSize from '../../styles/fontSize';\r\nconst { medium } = fontSize;\r\n\r\nconst OuterBox = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n\r\n  h1 {\r\n    text-align: center;\r\n    font-size: ${medium};\r\n    margin: 0 0 10px;\r\n    padding: 0;\r\n    line-height: 1;\r\n  }\r\n`;\r\n\r\nconst Login = () => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <GuestOnlyContainer>\r\n      <Helmet>\r\n        <title>{t('로그인')}</title>\r\n      </Helmet>\r\n      <OuterBox>\r\n\r\n        <LoginContainer />\r\n      </OuterBox>\r\n    </GuestOnlyContainer>\r\n  );\r\n};\r\n\r\nexport default React.memo(Login);","export const color = {\r\n  primary: '#007bff',\r\n  secondary: '#6c757d',\r\n  success: '#28a745',\r\n  danger: '#dc3545',\r\n  warning: '#ffc107',\r\n  info: '#17a2b8',\r\n  light: '#f8f9fa',\r\n  dark: '#515151',\r\n  black: '#000',\r\n  jmt: '#ff3d00',\r\n  shadow: '#c9c9c9',\r\n};\r\n\r\nexport const buttonColor = {\r\n  primary: [color.primary, '#fff', color.primary],\r\n  secondary: [color.secondary, '#fff', color.secondary],\r\n  success: [color.success, '#fff', color.success],\r\n  danger: [color.danger, '#fff', color.danger],\r\n  warning: [color.warning, '#212529', '#212529'],\r\n  info: [color.info, '#fff', color.info],\r\n  light: [color.light, '#212529', '#212529'],\r\n  dark: [color.dark, '#fff', color.dark],\r\n  jmt: [color.jmt, '#fff', color.jmt],\r\n};\r\n"],"names":["big","medium","normal","fontSize","jmt","color","commonStyle","css","_templateObject","_taggedTemplateLiteral","SmallButton","styled","button","_templateObject2","_ref","buttonColor","_templateObject3","_ref2","width","_templateObject4","MidButton","_templateObject5","_ref3","_templateObject6","BigButton","_templateObject7","_ref4","_templateObject8","SearchButton","_templateObject9","_ref5","_templateObject10","_ref6","_templateObject11","ButtonGroup","div","_templateObject12","_ref7","concat","BackButton","_templateObject13","_templateObject14","InputBox","input","React","small","Box","dark","c","MessageBox","messages","children","push","_jsx","_Fragment","map","message","i","UnAuthorized","loadable","GuestOnlyContainer","states","isLogin","useContext","UserInfoContext","FormBox","form","LinkBox","LoginImage","img","LoginForm","_form$email","_form$password","onSubmit","onChange","errors","t","useTranslation","_jsxs","autoComplete","Link","to","FiHome","style","height","right","position","src","loginimage","type","name","value","email","placeholder","password","global","LoginContainer","setForm","useState","setErrors","searchParams","useSearchParams","navigate","useNavigate","actions","setIsLogin","setUserInfo","setIsAdmin","useCallback","e","preventDefault","_errors","hasErrors","requiredFields","field","msg","Object","entries","trim","apiLogin","then","res","token","data","cookies","path","user","apiUser","isAdmin","authorities","some","a","authority","redirectURL","get","replace","err","console","error","catch","_errors$global","target","OuterBox","Login","Helmet","primary","secondary","success","danger","warning","info","light","black","shadow"],"sourceRoot":""}